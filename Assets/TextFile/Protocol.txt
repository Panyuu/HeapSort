<<<<<<< HEAD
1. Ungeordnetes Array: 23, 55, 1, 
2. Vaterknoten: 23;    Kindknoten_1: 55;    Kindknoten_2: 1;    ArrayLänge: 3
3. Vergleich von Kindknoten_1: 55 mit Kindknoten_2: 1
4. Kindknoten_1: 55 >= Kindknoten_2: 1
5. Vergleich von Vaterknoten: 23 mit Kindknoten: 55
6. Vaterknoten: 23 < Kindknoten: 55.
7. Vaterknoten: 23 wechselt die Position mit Kindknoten: 55.   !
8. 55, 23, 1, 
9. neuer Vaterknoten: 23.
10. Der jetzt zu betrachtende Vaterknoten: 23
11. Vaterknoten: 23 >= Kindknoten: 1
12. 23, 1, 55, 
13. Der jetzt zu betrachtende Vaterknoten: 23
14. 1, 23, 55, 
15. Der jetzt zu betrachtende Vaterknoten: 1
16. 1, 23, 55, 
17. Geordnetes Array: 1, 23, 55, 
=======
1. Ungeordnetes Array: 22, 21, 20, 6, 
2. Vaterknoten: 21;    Kindknoten_1: 6;    ArrayLänge: 4
3. Vergleich von Vaterknoten: 21 mit Kindknoten: 6
4. Vaterknoten: 21 >= Kindknoten: 6.
5. Kein Tausch hat stattgefunden zwischen Vaterknoten: 21 und Kindknoten: 6.
6. Vaterknoten: 22;    Kindknoten_1: 21;    Kindknoten_2: 20;    ArrayLänge: 4
7. Vergleich von Kindknoten_1: 21 mit Kindknoten_2: 20
8. Kindknoten_1: 21 >= Kindknoten_2: 20
9. Vergleich von Vaterknoten: 22 mit Kindknoten: 21
10. Vaterknoten: 22 >= Kindknoten: 21.
11. Kein Tausch hat stattgefunden zwischen Vaterknoten: 22 und Kindknoten: 21.
12. Kindknoten_1: 21 >= Kindknoten_2: 20
13. neuer Vaterknoten: 21
14. Der jetzt zu betrachtende Vaterknoten: 21
15. Vaterknoten: 21 >= Kindknoten: 6
16. 21, 6, 20, 22, 
17. neuer Vaterknoten: 6.
18. Der jetzt zu betrachtende Vaterknoten: 6
19. Vaterknoten: 6 < Kindknoten: 20
20. Vaterknoten: 6 wechselt die Position mit Kindknoten: 20.   !
21. 20, 6, 21, 22, 
22. 20, 6, 21, 22, 
23. Der jetzt zu betrachtende Vaterknoten: 20
24. 6, 20, 21, 22, 
25. Der jetzt zu betrachtende Vaterknoten: 6
26. 6, 20, 21, 22, 
27. Geordnetes Array: 6, 20, 21, 22, 
>>>>>>> visualHeap
